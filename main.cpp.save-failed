#include <iostream>
#include<stdio.h>

using namespace std;
struct free{
int i1;
int j1;
}F[81];
int z;
int error(int,int,int);
int u=0;
int l=0;
//int a[9][9]={{0,0,0,7,0,8,5,0,0},{0,0,6,9,5,0,8,3,0},{0,0,8,4,6,0,0,0,1},{5,0,1,0,0,0,0,0,0},{3,0,0,0,0,0,0,0,2},{0,0,0,0,0,0,3,0,9},{9,0,0,0,7,6,1,0,0},{0,7,5,0,9,4,6,0,0},{0,0,3,8,0,1,0,0,0}};
//int a[9][9]={{3,9,6,8,0,0,0,2,5},{0,2,0,0,0,7,0,0,9},{0,7,4,0,0,9,0,0,0},{0,1,0,6,0,5,0,0,7},{8,0,0,4,0,2,0,0,1},{9,0,0,1,0,3,0,8,0},{0,0,0,9,0,0,1,4,0},{2,0,0,7,0,0,0,3,0},{6,3,0,0,0,1,5,7,8}};
int a[9][9]={{37,0,0,0,0,0,0,8,0},{0,0,0,0,0,7,0,0,2},{4,0,1,0,0,0,0,5,0},{0,3,0,0,4,5,0,9,0},{7,0,0,8,0,3,0,0,5},{0,1,0,6,7,0,0,2,0},{0,2,0,0,0,0,8,0,4},{6,0,0,2,0,0,0,0,0},{0,9,0,0,0,0,0,0,6}};
int sudoku(int k,int *a1)
{
    if (k>z)
                return 1;
    int p,m;
    aaa:
    p=error(F[k].i1,F[k].j1,a1[k]);
    while (p==0)
        {
            a1[k]++;
            if (a1[k]>9)
            {
                a1[k]=1;
                a[F[k].i1][F[k].j1]=0;
                return 0;
            }
            p=error(F[k].i1,F[k].j1,a1[k]);
        }
        a[F[k].i1][F[k].j1]=a1[k];
        k++;
        m=sudoku(k,a1);
         if (m==0)
        {
            k--;
            a1[k]++;
            if (a1[k]>9)
                a1[k]=9;
            goto aaa;
        }
}
int error(int i,int j,int k)
{
    int p=0;
    int i1,j1;
    for (i1=0;i1<9;i1++)
    {
        if (k==a[i1][j])
            p++;
    }
    for (j1=0;j1<9;j1++)
    {
        if (k==a[i][j1])
            p++;
    }
    while (i%3!=0)
        i--;
    while (j%3!=0)
        j--;
    i1=i;
    j1=j;
    for (;i1<i+3;i1++)
    {
        j1=j;
        for (;j1<j+3;j1++)
        {
            if (k==a[i1][j1])
                p++;
        }
    }
    if (p==0)
        return 1;
    else
        return 0;
}
int main()
{
    //free F[81];
    int i,j,k=0,m;
    int *a1;
    for (i=0;i<9;i++)
    {
        for (j=0;j<9;j++)
        {
            if (a[i][j]==0)
            {
                F[k].i1=i;
                F[k].j1=j;
                k++;
            }
        }
    }
    z=k;
    z--;
    a1=new int [k];
        for (j=0;j<k;j++)
        {
            a1[j]=1;
        }
    m=sudoku(0,a1);
    if (m==0)
        printf("THIS SUDOKU COULD NOT BE SOLVED\n");
    else
    {
        for (i=0;i<9;i++)
        {
            for (j=0;j<9;j++)
            {
                printf("%d ",a[i][j]);
            }
            printf("\n");
        }
    }
    return 0;
}
